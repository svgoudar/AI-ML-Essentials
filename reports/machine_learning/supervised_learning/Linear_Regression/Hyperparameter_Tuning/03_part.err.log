Traceback (most recent call last):
  File "C:\Users\sangouda\AppData\Local\Programs\Python\Python312\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\sangouda\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sangouda\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sangouda\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sangouda\AppData\Local\Programs\Python\Python312\Lib\asyncio\base_events.py", line 664, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\sangouda\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\sangouda\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\sangouda\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings("ignore")

# Create grid of coefficients
beta1 = np.linspace(-3, 3, 400)
beta2 = np.linspace(-3, 3, 400)
B1, B2 = np.meshgrid(beta1, beta2)

# Ridge constraint (circle): beta1^2 + beta2^2 <= t
circle = B1**2 + B2**2

# Example OLS solution (unregularized minimum)
ols_point = np.array([2.0, 1.5])

# Simulated contour of RSS (elliptical error surface)
rss = (B1 - ols_point[0])**2/4 + (B2 - ols_point[1])**2

plt.figure(figsize=(7,7))

# RSS contours
cs = plt.contour(B1, B2, rss, levels=15, cmap="coolwarm", alpha=0.7)
plt.clabel(cs, inline=1, fontsize=8)

# Ridge constraint region (circle)
circle_boundary = plt.contour(B1, B2, circle, levels=[2**2], colors="green", linewidths=2)
circle_boundary.collections[0].set_label("L2 constraint")

# Mark OLS solution
plt.scatter(*ols_point, color="red", marker="x", s=100, label="OLS solution")

# Approx Ridge solution (where ellipse first touches circle)
ridge_point = np.array([1.2, 0.9])
plt.scatter(*ridge_point, color="blue", marker="o", s=80, label="Ridge solution")

plt.xlabel(r"$\beta_1$")
plt.ylabel(r"$\beta_2$")
plt.title("Ridge Regression: L2 Circular Constraint")
plt.legend()
plt.grid(True)
plt.axis("equal")
plt.show()

------------------

[31m---------------------------------------------------------------------------[39m
[31mAttributeError[39m                            Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[2][39m[32m, line 28[39m
[32m     26[39m [38;5;66;03m# Ridge constraint region (circle)[39;00m
[32m     27[39m circle_boundary = plt.contour(B1, B2, circle, levels=[[32m2[39m**[32m2[39m], colors=[33m"[39m[33mgreen[39m[33m"[39m, linewidths=[32m2[39m)
[32m---> [39m[32m28[39m [43mcircle_boundary[49m[43m.[49m[43mcollections[49m[[32m0[39m].set_label([33m"[39m[33mL2 constraint[39m[33m"[39m)
[32m     30[39m [38;5;66;03m# Mark OLS solution[39;00m
[32m     31[39m plt.scatter(*ols_point, color=[33m"[39m[33mred[39m[33m"[39m, marker=[33m"[39m[33mx[39m[33m"[39m, s=[32m100[39m, label=[33m"[39m[33mOLS solution[39m[33m"[39m)

[31mAttributeError[39m: 'QuadContourSet' object has no attribute 'collections'
AttributeError: 'QuadContourSet' object has no attribute 'collections'

